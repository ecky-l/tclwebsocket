name: tclwebsocket-master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  tclwebsocket-master:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Install Tcl and dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install tcl-dev tcllib tcl-thread fossil
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install -y magicsplat-tcl-tk --install-arguments="ALLUSERS=1 APPLICATIONFOLDER=C:\Progra~1\Tcl"
            choco install -y fossil openssl
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install tcl-tk
          fi
      - name: Checkout
        uses: actions/checkout@v2
      - name: Submodule update
        uses: snickerbockers/submodules-init@v4
      
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Cache or restore tclhttpd
        id: cache-tclhttpd
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/tclhttpd
          key: tclhttpd
      - name: Get tclhttpd for tests
        if: steps.cache-tclhttpd.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: tcl-mirror/tclhttpd.git
          ref: master
          path: ${{ github.workspace }}/tclhttpd
      - name: Test
        working-directory: ${{github.workspace}}/build
        env:
          TCLHTTPD_HOME: ${{github.workspace}}/tclhttpd
        run: ctest -C ${{env.BUILD_TYPE}} --verbose
      
