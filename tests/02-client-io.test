## 02-client-io.test (created by Tloona here)
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
    tcltest::configure -verbose {start body pass start line error}
}

if {[catch {package present tclwebsocket} ver]} {
    source [file join [file dirname [info script]] loadpackage.tcl]
}

#### fixtures
set connectEcho {
    set sock [websocket localhost 8015 /echo]
}
set connectCmd {
    set sock [websocket localhost 8015 /cmd]
}
set closeSock {
    close $sock
}
#### /fixtures

test client-io-text-normal "client text io in blocking mode, normal" -setup $connectEcho -body {
    fconfigure $sock -buffering line
    puts $sock hello
    gets $sock
} -cleanup $closeSock -result hello

test client-io-text-blocks "client text io in blocking mode blocks until input arrives" \
        -setup $connectCmd -body {
    fconfigure $sock -buffering line
    puts $sock "echoafter: 2000 hello"
    set t [lindex [time [list gets $sock]] 0]
    expr $t >= 2000000
} -cleanup $closeSock -result 1

test client-io-text-nonblocking "websocket client text io in non-blocking mode" -setup $connectEcho -body {
    fconfigure $sock -buffering line -blocking 0
    lappend result [gets $sock v] [fblocked $sock]
    puts $sock hello
    while {[gets $sock v] < 0} {
        after 1000
    }
    lappend result $v
} -cleanup $closeSock -result {-1 1 hello}
