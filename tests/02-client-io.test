## 02-client-io.test (created by Tloona here)
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
    tcltest::configure -verbose {start body pass start line error}
}

if {[catch {package present tclwebsocket} ver]} {
    source [file join [file dirname [info script]] loadpackage.tcl]
}

#### fixtures
set connectEcho {
    set sock [websocket localhost 8015 /echo]
}
set connectCmd {
    set sock [websocket localhost 8015 /cmd]
}
set closeSock {
    close $sock
}

set loadGif {
    set fh [open [file join $tcltest::testsDirectory data Tcl_Tk125.gif]]
    set data [read $fh]
    close $fh
}
#### /fixtures

test text-normal "client text io in blocking mode, normal" -setup $connectEcho -body {
    fconfigure $sock -buffering line
    puts $sock hello
    gets $sock
} -cleanup $closeSock -result hello

test text-blocks "client text io in blocking mode blocks until input arrives" \
        -setup $connectCmd -body {
    fconfigure $sock -buffering line
    puts $sock "echoafter: 2000 hello"
    set t [lindex [time [list gets $sock]] 0]
    expr $t >= 2000000
} -cleanup $closeSock -result 1

test text-nonblocking "websocket client text io in non-blocking mode" -setup $connectEcho -body {
    fconfigure $sock -buffering line -blocking 0
    lappend result [gets $sock v] [fblocked $sock]
    puts $sock hello
    while {[gets $sock v] < 0} {
        after 1000
    }
    lappend result $v
} -cleanup $closeSock -result {-1 1 hello}

tcltest::test eof-blocking "client checks eof in blocking mode" -setup $connectCmd -body {
    fconfigure $sock -buffering line
    puts $sock "remoteclose"
    list [gets $sock v] [eof $sock] $v
} -cleanup $closeSock -result {-1 1 {}}

tcltest::test eof-nonblocking "client checks eof in nonblocking mode" -setup $connectCmd -body {
    fconfigure $sock -buffering line -blocking 0
    puts $sock "remoteclose"
    set r [gets $sock v]
    set e 0
    while {$r < 0 && ! $e} {
        set r [gets $sock v]
        set e [eof $sock]
    }
    list $r $e $v
} -cleanup $closeSock -result {-1 1 {}}

tcltest::test text-buffer-small "buffer is smaller than text" -setup $connectEcho -body {
    fconfigure $sock -buffering line -buffersize 20
    puts $sock [string repeat + 22]
    list [gets $sock v] $v
} -cleanup $closeSock -result [list 22 [string repeat + 22]] -constraints knownBug

tcltest::test binary-normal "binary IO works" -setup [concat $connectEcho \; $loadGif] -body {
    fconfigure $sock -translation auto -encoding binary -transmission binary
    puts -nonewline $sock $data
    flush $sock
    #gets $sock
} -cleanup [list $closeSock ; unset -nocomplain data] \
    -result 4e0ed6f6ed05e003ee0c0eb4cc895ae4dec3871d576aad96bb66fc8f98eb6638 \
    -constraints knownBug
